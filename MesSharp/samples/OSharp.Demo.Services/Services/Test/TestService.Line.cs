// <autogenerated>
//   This file was generated by T4 code generator Dto.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Linq.Expressions;
using Mes.Core.Data;
using Mes.Demo.Dtos.Test;
using Mes.Demo.Models.Test;
using Mes.Utility;
using Mes.Utility.Data;

namespace Mes.Demo.Services.Test
{
	public partial class TestService
    {        
        public IRepository<Line, int> LineRepository {protected get; set; }

        /// <summary>
        /// 获取产线 信息查询数据集
        /// </summary>
        public IQueryable<Line> Lines { get { return LineRepository.Entities; } }
        
        /// <summary>
        /// 检查产线信息是否存在
        /// </summary>
        /// <param name="predicate">检查谓语表达式</param>
        /// <param name="id">更新的产线信息编号</param>
        /// <returns>产线信息是否存在</returns>
        public bool CheckLineExists(Expression<Func<Line, bool>> predicate, int id = 0)
        {
            return LineRepository.CheckExists(predicate, id);
        }
        /// <summary>
        /// 添加产线信息
        /// </summary>
        /// <param name="dtos">要添加的产线信息DTO信息</param>
        /// <returns>业务操作结果</returns>
        public OperationResult AddLines(params LineDto[] dtos)
        {
            return LineRepository.Insert(dtos);
        }
        
        /// <summary>
        /// 更新产线信息
        /// </summary>
        /// <param name="dtos">包含更新信息的产线DTO信息</param>
        /// <returns>业务操作结果</returns>
        public OperationResult EditLines(params LineDto[] dtos)
        {
            return LineRepository.Update(dtos);
        }

        /// <summary>
        /// 删除产线信息
        /// </summary>
        /// <param name="ids">要删除的产线信息编号</param>
        /// <returns>业务操作结果</returns>
        public OperationResult DeleteLines(params int[] ids)
        {
            return LineRepository.Delete(ids);
        }
    }
}
      
