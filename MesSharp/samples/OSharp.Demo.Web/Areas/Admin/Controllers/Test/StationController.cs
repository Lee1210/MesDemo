// <autogenerated>
//   This file was generated by T4 code generator Dto.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;

using Mes.Demo.Contracts.Test;
using Mes.Demo.Dtos.Test;
using Mes.Demo.Models.Test;
using Mes.Utility.Data;
using Mes.Utility.Extensions;
using Mes.Web.Mvc.Binders;
using Mes.Web.Mvc.Security;
using Mes.Web.UI;


namespace Mes.Demo.Web.Areas.Admin.Controllers
{
    public class StationController : AdminBaseController
    {
        public ITestContract TestContract { get; set; }



        [AjaxOnly]
        public ActionResult GridData(int? id)
        {
            int total;
            GridRequest request = new GridRequest(Request);
            var datas = GetQueryData<Station, int>(TestContract.Stations, out total, request).Select(m => new
            {
                m.Name,
                m.Remark,
                m.IsAdmin,
                m.IsLocked,
                m.Id,
                m.IsDeleted,
                m.CreatedTime,
        
            });
            return Json(new GridData<object>(datas, total), JsonRequestBehavior.AllowGet);
        }

        [HttpPost]
        [AjaxOnly]
        public ActionResult Add([ModelBinder(typeof(JsonBinder<StationDto>))] ICollection<StationDto> dtos)
        {
            dtos.CheckNotNull("dtos");
            OperationResult result = TestContract.AddStations(dtos.ToArray());
            return Json(result.ToAjaxResult(), JsonRequestBehavior.AllowGet);
        }

        [HttpPost]
        [AjaxOnly]
        public ActionResult Edit([ModelBinder(typeof(JsonBinder<StationDto>))] ICollection<StationDto> dtos)
        {
            dtos.CheckNotNull("dtos");
            OperationResult result = TestContract.EditStations(dtos.ToArray());
            return Json(result.ToAjaxResult(), JsonRequestBehavior.AllowGet);
        }

        [HttpPost]
        [AjaxOnly]
        public ActionResult Delete([ModelBinder(typeof(JsonBinder<int>))] ICollection<int> ids)
        {
            ids.CheckNotNull("ids");
            OperationResult result = TestContract.DeleteStations(ids.ToArray());
            return Json(result.ToAjaxResult(), JsonRequestBehavior.AllowGet);
        }
       
	}
}
